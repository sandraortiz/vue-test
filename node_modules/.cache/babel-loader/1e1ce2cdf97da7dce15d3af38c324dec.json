{"remainingRequest":"/Users/nativa/Documents/1-work/vue-firebase/node_modules/babel-loader/lib/index.js!/Users/nativa/Documents/1-work/vue-firebase/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nativa/Documents/1-work/vue-firebase/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/nativa/Documents/1-work/vue-firebase/src/views/About.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nativa/Documents/1-work/vue-firebase/src/views/About.vue","mtime":1634673559829},{"path":"/Users/nativa/Documents/1-work/vue-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nativa/Documents/1-work/vue-firebase/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nativa/Documents/1-work/vue-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nativa/Documents/1-work/vue-firebase/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2V0QXV0aCwgc2lnbkluV2l0aEVtYWlsQW5kUGFzc3dvcmQgfSBmcm9tICJmaXJlYmFzZS9hdXRoIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBYm91dCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVtYWlsOiAiIiwKICAgICAgcGFzc3dvcmQ6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKCkgewogICAgICB2YXIgYXV0aCA9IGdldEF1dGgoKTsKICAgICAgc2lnbkluV2l0aEVtYWlsQW5kUGFzc3dvcmQoYXV0aCwgdGhpcy5lbWFpbCwgdGhpcy5wYXNzd29yZCkudGhlbih0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogJy9mb3JtJwogICAgICB9KSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOyAvLyBjb25zdCBlcnJvckNvZGUgPSBlcnJvci5jb2RlOwogICAgICAgIC8vIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yLm1lc3NhZ2U7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/nativa/Documents/1-work/vue-firebase/src/views/About.vue"],"names":[],"mappings":"AAqCA,SAAS,OAAT,EAAkB,0BAAlB,QAAoD,eAApD;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,OADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,KAAK,EAAE,EADF;AAEL,MAAA,QAAQ,EAAE;AAFL,KAAP;AAID,GAPY;AAQb,EAAA,OAAO,EAAE;AACP,IAAA,KADO,mBACC;AACN,UAAM,IAAG,GAAI,OAAO,EAApB;AACA,MAAA,0BAA0B,CAAC,IAAD,EAAO,KAAK,KAAZ,EAAmB,KAAK,QAAxB,CAA1B,CACG,IADH,CAEI,KAAK,OAAL,CAAa,IAAb,CAAkB;AAAC,QAAA,IAAI,EAAE;AAAP,OAAlB,CAFJ,EAKG,KALH,CAKS,UAAC,KAAD,EAAW;AAChB,QAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EADgB,CAEhB;AACA;AACD,OATH;AAUD;AAbM;AARI,CAAf","sourcesContent":["<template>\n  <div class=\"container\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          v-model=\"email\"\n        />\n        <div id=\"emailHelp\" class=\"form-text\">\n          We'll never share your email with anyone else.\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"exampleInputPassword1\"\n          v-model=\"password\"\n        />\n      </div>\n      <div class=\"mb-3 form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n        <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n      </div>\n      <button @click=\"login\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n\n     <router-link to=\"/\" tag=\"button\">Salir</router-link>\n  </div>\n</template>\n\n<script>\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n\nexport default {\n  name: \"About\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n    };\n  },\n  methods: {\n    login() {\n      const auth = getAuth();\n      signInWithEmailAndPassword(auth, this.email, this.password)\n        .then(\n          this.$router.push({path: '/form'})\n\n        )\n        .catch((error) => {\n          console.log(error)\n          // const errorCode = error.code;\n          // const errorMessage = error.message;\n        });\n    },\n  },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""}]}